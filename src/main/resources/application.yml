spring:
  application:
    name: WarehouseQrApplication
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        auto_quote_keyword: true
    # Автоматическое создание и обновление таблиц по мере изменения модели
    hibernate:
      ddl-auto: update
  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml
  mail:
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            protocol: TLSv1.2
            trust: smtp.gmail.com
          debug: true
  main:
    allow-bean-definition-overriding: true
app:
  qrcode-base-url: https://warehouse-qr-app-8adwv.ondigitalocean.app/api/qrcodes/
  reservation-base-url: https://warehouse-qr-app-8adwv.ondigitalocean.app/api/reservation/
  base-url: https://warehouse-qr-app-8adwv.ondigitalocean.app/api/
server:
  servlet:
    context-path: /api

stripe:
  api:
    key: sk_test_51RnJuqD8IZD1nmoxpSWZWx9Wqkj2Zmw3vpMDENF2RzNNt9gvnydrlAmd6mywJsmyYX2sODmwYqW53G7Rk4VZqNKW00UqruGbXS
    currency: euro

key:
  access: ${KEY_ACCESS}
  refresh: ${KEY_REFRESH}

logging:
  file:
    name: logs/log.log
  level:
    root: info

messages:
  hello: Hello from DigitalOcean!

jwt:
  secret: ${JWT_SECRET}